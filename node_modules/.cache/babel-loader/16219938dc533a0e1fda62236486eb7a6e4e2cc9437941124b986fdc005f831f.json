{"ast":null,"code":"'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Ensures that only <CR><LF> sequences are used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass LeWindows extends Transform {\n  constructor(options) {\n    super(options);\n    // init Transform\n    this.options = options || {};\n    this.lastByte = false;\n  }\n\n  /**\n   * Escapes dots\n   */\n  _transform(chunk, encoding, done) {\n    let buf;\n    let lastPos = 0;\n    for (let i = 0, len = chunk.length; i < len; i++) {\n      if (chunk[i] === 0x0a) {\n        // \\n\n        if (i && chunk[i - 1] !== 0x0d || !i && this.lastByte !== 0x0d) {\n          if (i > lastPos) {\n            buf = chunk.slice(lastPos, i);\n            this.push(buf);\n          }\n          this.push(Buffer.from('\\r\\n'));\n          lastPos = i + 1;\n        }\n      }\n    }\n    if (lastPos && lastPos < chunk.length) {\n      buf = chunk.slice(lastPos);\n      this.push(buf);\n    } else if (!lastPos) {\n      this.push(chunk);\n    }\n    this.lastByte = chunk[chunk.length - 1];\n    done();\n  }\n}\nmodule.exports = LeWindows;","map":{"version":3,"names":["stream","require","Transform","LeWindows","constructor","options","lastByte","_transform","chunk","encoding","done","buf","lastPos","i","len","length","slice","push","Buffer","from","module","exports"],"sources":["C:/Users/deiby/Desktop/cloneWebCursos/paginacursos/node_modules/nodemailer/lib/mime-node/le-windows.js"],"sourcesContent":["'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Ensures that only <CR><LF> sequences are used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass LeWindows extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n        this.lastByte = false;\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let buf;\n        let lastPos = 0;\n\n        for (let i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x0a) {\n                // \\n\n                if ((i && chunk[i - 1] !== 0x0d) || (!i && this.lastByte !== 0x0d)) {\n                    if (i > lastPos) {\n                        buf = chunk.slice(lastPos, i);\n                        this.push(buf);\n                    }\n                    this.push(Buffer.from('\\r\\n'));\n                    lastPos = i + 1;\n                }\n            }\n        }\n\n        if (lastPos && lastPos < chunk.length) {\n            buf = chunk.slice(lastPos);\n            this.push(buf);\n        } else if (!lastPos) {\n            this.push(chunk);\n        }\n\n        this.lastByte = chunk[chunk.length - 1];\n        done();\n    }\n}\n\nmodule.exports = LeWindows;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,SAAS,GAAGF,MAAM,CAACE,SAAS;;AAElC;AACA;AACA;AACA;AACA;AACA,MAAMC,SAAS,SAASD,SAAS,CAAC;EAC9BE,WAAW,CAACC,OAAO,EAAE;IACjB,KAAK,CAACA,OAAO,CAAC;IACd;IACA,IAAI,CAACA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IAC5B,IAAI,CAACC,QAAQ,GAAG,KAAK;EACzB;;EAEA;AACJ;AACA;EACIC,UAAU,CAACC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAE;IAC9B,IAAIC,GAAG;IACP,IAAIC,OAAO,GAAG,CAAC;IAEf,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,GAAG,GAAGN,KAAK,CAACO,MAAM,EAAEF,CAAC,GAAGC,GAAG,EAAED,CAAC,EAAE,EAAE;MAC9C,IAAIL,KAAK,CAACK,CAAC,CAAC,KAAK,IAAI,EAAE;QACnB;QACA,IAAKA,CAAC,IAAIL,KAAK,CAACK,CAAC,GAAG,CAAC,CAAC,KAAK,IAAI,IAAM,CAACA,CAAC,IAAI,IAAI,CAACP,QAAQ,KAAK,IAAK,EAAE;UAChE,IAAIO,CAAC,GAAGD,OAAO,EAAE;YACbD,GAAG,GAAGH,KAAK,CAACQ,KAAK,CAACJ,OAAO,EAAEC,CAAC,CAAC;YAC7B,IAAI,CAACI,IAAI,CAACN,GAAG,CAAC;UAClB;UACA,IAAI,CAACM,IAAI,CAACC,MAAM,CAACC,IAAI,CAAC,MAAM,CAAC,CAAC;UAC9BP,OAAO,GAAGC,CAAC,GAAG,CAAC;QACnB;MACJ;IACJ;IAEA,IAAID,OAAO,IAAIA,OAAO,GAAGJ,KAAK,CAACO,MAAM,EAAE;MACnCJ,GAAG,GAAGH,KAAK,CAACQ,KAAK,CAACJ,OAAO,CAAC;MAC1B,IAAI,CAACK,IAAI,CAACN,GAAG,CAAC;IAClB,CAAC,MAAM,IAAI,CAACC,OAAO,EAAE;MACjB,IAAI,CAACK,IAAI,CAACT,KAAK,CAAC;IACpB;IAEA,IAAI,CAACF,QAAQ,GAAGE,KAAK,CAACA,KAAK,CAACO,MAAM,GAAG,CAAC,CAAC;IACvCL,IAAI,EAAE;EACV;AACJ;AAEAU,MAAM,CAACC,OAAO,GAAGlB,SAAS"},"metadata":{},"sourceType":"script","externalDependencies":[]}