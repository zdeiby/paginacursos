{"ast":null,"code":"import _objectSpread from \"C:/Users/deiby/Desktop/cloneWebCursos/paginacursos/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"C:/Users/deiby/Desktop/cloneWebCursos/paginacursos/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectWithoutProperties from \"C:/Users/deiby/Desktop/cloneWebCursos/paginacursos/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"bsPrefix\", \"split\", \"className\", \"childBsPrefix\", \"as\"];\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport DropdownContext from '@restart/ui/DropdownContext';\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport Button from './Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar DropdownToggle = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    split = _ref.split,\n    className = _ref.className,\n    childBsPrefix = _ref.childBsPrefix,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? Button : _ref$as,\n    props = _objectWithoutProperties(_ref, _excluded);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\n  var dropdownContext = useContext(DropdownContext);\n  if (childBsPrefix !== undefined) {\n    props.bsPrefix = childBsPrefix;\n  }\n  var _useDropdownToggle = useDropdownToggle(),\n    _useDropdownToggle2 = _slicedToArray(_useDropdownToggle, 1),\n    toggleProps = _useDropdownToggle2[0];\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\n\n  // This intentionally forwards size and variant (if set) to the\n  // underlying component, to allow it to render size and style variants.\n  return /*#__PURE__*/_jsx(Component, _objectSpread(_objectSpread({\n    className: classNames(className, prefix, split && \"\".concat(prefix, \"-split\"), (dropdownContext == null ? void 0 : dropdownContext.show) && 'show')\n  }, toggleProps), props));\n});\nDropdownToggle.displayName = 'DropdownToggle';\nexport default DropdownToggle;","map":{"version":3,"names":["useMergedRefs","DropdownContext","useDropdownToggle","classNames","React","useContext","Button","useBootstrapPrefix","useWrappedRefWithWarning","jsx","_jsx","DropdownToggle","forwardRef","ref","bsPrefix","split","className","childBsPrefix","as","Component","props","prefix","dropdownContext","undefined","toggleProps","show","displayName"],"sources":["C:/Users/deiby/Desktop/cloneWebCursos/paginacursos/node_modules/react-bootstrap/esm/DropdownToggle.js"],"sourcesContent":["import useMergedRefs from '@restart/hooks/useMergedRefs';\r\nimport DropdownContext from '@restart/ui/DropdownContext';\r\nimport { useDropdownToggle } from '@restart/ui/DropdownToggle';\r\nimport classNames from 'classnames';\r\nimport * as React from 'react';\r\nimport { useContext } from 'react';\r\nimport Button from './Button';\r\nimport { useBootstrapPrefix } from './ThemeProvider';\r\nimport useWrappedRefWithWarning from './useWrappedRefWithWarning';\r\nimport { jsx as _jsx } from \"react/jsx-runtime\";\r\nconst DropdownToggle = /*#__PURE__*/React.forwardRef(({\r\n  bsPrefix,\r\n  split,\r\n  className,\r\n  childBsPrefix,\r\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\r\n  as: Component = Button,\r\n  ...props\r\n}, ref) => {\r\n  const prefix = useBootstrapPrefix(bsPrefix, 'dropdown-toggle');\r\n  const dropdownContext = useContext(DropdownContext);\r\n  if (childBsPrefix !== undefined) {\r\n    props.bsPrefix = childBsPrefix;\r\n  }\r\n  const [toggleProps] = useDropdownToggle();\r\n  toggleProps.ref = useMergedRefs(toggleProps.ref, useWrappedRefWithWarning(ref, 'DropdownToggle'));\r\n\r\n  // This intentionally forwards size and variant (if set) to the\r\n  // underlying component, to allow it to render size and style variants.\r\n  return /*#__PURE__*/_jsx(Component, {\r\n    className: classNames(className, prefix, split && `${prefix}-split`, (dropdownContext == null ? void 0 : dropdownContext.show) && 'show'),\r\n    ...toggleProps,\r\n    ...props\r\n  });\r\n});\r\nDropdownToggle.displayName = 'DropdownToggle';\r\nexport default DropdownToggle;"],"mappings":";;;;AAAA,OAAOA,aAAa,MAAM,8BAA8B;AACxD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,iBAAiB,QAAQ,4BAA4B;AAC9D,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,kBAAkB,QAAQ,iBAAiB;AACpD,OAAOC,wBAAwB,MAAM,4BAA4B;AACjE,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,IAAMC,cAAc,GAAG,aAAaP,KAAK,CAACQ,UAAU,CAAC,gBAQlDC,GAAG,EAAK;EAAA,IAPTC,QAAQ,QAARA,QAAQ;IACRC,KAAK,QAALA,KAAK;IACLC,SAAS,QAATA,SAAS;IACTC,aAAa,QAAbA,aAAa;IAAA,eAEbC,EAAE;IAAEC,SAAS,wBAAGb,MAAM;IACnBc,KAAK;EAER,IAAMC,MAAM,GAAGd,kBAAkB,CAACO,QAAQ,EAAE,iBAAiB,CAAC;EAC9D,IAAMQ,eAAe,GAAGjB,UAAU,CAACJ,eAAe,CAAC;EACnD,IAAIgB,aAAa,KAAKM,SAAS,EAAE;IAC/BH,KAAK,CAACN,QAAQ,GAAGG,aAAa;EAChC;EACA,yBAAsBf,iBAAiB,EAAE;IAAA;IAAlCsB,WAAW;EAClBA,WAAW,CAACX,GAAG,GAAGb,aAAa,CAACwB,WAAW,CAACX,GAAG,EAAEL,wBAAwB,CAACK,GAAG,EAAE,gBAAgB,CAAC,CAAC;;EAEjG;EACA;EACA,OAAO,aAAaH,IAAI,CAACS,SAAS;IAChCH,SAAS,EAAEb,UAAU,CAACa,SAAS,EAAEK,MAAM,EAAEN,KAAK,cAAOM,MAAM,WAAQ,EAAE,CAACC,eAAe,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,eAAe,CAACG,IAAI,KAAK,MAAM;EAAC,GACtID,WAAW,GACXJ,KAAK,EACR;AACJ,CAAC,CAAC;AACFT,cAAc,CAACe,WAAW,GAAG,gBAAgB;AAC7C,eAAef,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}