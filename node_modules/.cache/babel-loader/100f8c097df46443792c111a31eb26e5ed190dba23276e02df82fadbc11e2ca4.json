{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Mailer = void 0;\nconst nodemailer_1 = require(\"nodemailer\");\nconst server_1 = require(\"react-dom/server\");\nconst renderBody = body => `<!DOCTYPE html>${(0, server_1.renderToStaticMarkup)(body)}`;\nconst createTransporter = _ref => {\n  let {\n    transport,\n    defaults\n  } = _ref;\n  if ('sendMail' in transport) {\n    return transport;\n  }\n  return (0, nodemailer_1.createTransport)(transport, defaults);\n};\nconst Mailer = (config, emails) => {\n  const transporter = createTransporter(config);\n  /**\n   * Use the `send` method to send your emails\n   *\n   * @param {string} template Your email template name: key of the email in the record you've provided.\n   * @param {Object} props The props of your email component\n   * @param {Object} options The options of email (to, from, attachments, etc.)\n   * @return Promise\n   */\n  const sendEmail = (template, props, options) => {\n    const {\n      subject,\n      body\n    } = emails[template](props);\n    return transporter.sendMail(Object.assign({\n      subject,\n      html: renderBody(body)\n    }, options));\n  };\n  return {\n    send: sendEmail\n  };\n};\nexports.Mailer = Mailer;\nexports.default = exports.Mailer;","map":{"version":3,"names":["Object","defineProperty","exports","value","Mailer","nodemailer_1","require","server_1","renderBody","body","renderToStaticMarkup","createTransporter","transport","defaults","createTransport","config","emails","transporter","sendEmail","template","props","options","subject","sendMail","assign","html","send","default"],"sources":["C:/Users/deiby/Desktop/cloneWebCursos/paginacursos/node_modules/nodemailer-react/dist/index.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Mailer = void 0;\nconst nodemailer_1 = require(\"nodemailer\");\nconst server_1 = require(\"react-dom/server\");\nconst renderBody = (body) => `<!DOCTYPE html>${(0, server_1.renderToStaticMarkup)(body)}`;\nconst createTransporter = ({ transport, defaults }) => {\n    if ('sendMail' in transport) {\n        return transport;\n    }\n    return (0, nodemailer_1.createTransport)(transport, defaults);\n};\nconst Mailer = (config, emails) => {\n    const transporter = createTransporter(config);\n    /**\n     * Use the `send` method to send your emails\n     *\n     * @param {string} template Your email template name: key of the email in the record you've provided.\n     * @param {Object} props The props of your email component\n     * @param {Object} options The options of email (to, from, attachments, etc.)\n     * @return Promise\n     */\n    const sendEmail = (template, props, options) => {\n        const { subject, body } = emails[template](props);\n        return transporter.sendMail(Object.assign({ subject, html: renderBody(body) }, options));\n    };\n    return {\n        send: sendEmail,\n    };\n};\nexports.Mailer = Mailer;\nexports.default = exports.Mailer;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,MAAM,GAAG,KAAK,CAAC;AACvB,MAAMC,YAAY,GAAGC,OAAO,CAAC,YAAY,CAAC;AAC1C,MAAMC,QAAQ,GAAGD,OAAO,CAAC,kBAAkB,CAAC;AAC5C,MAAME,UAAU,GAAIC,IAAI,IAAM,kBAAiB,CAAC,CAAC,EAAEF,QAAQ,CAACG,oBAAoB,EAAED,IAAI,CAAE,EAAC;AACzF,MAAME,iBAAiB,GAAG,QAA6B;EAAA,IAA5B;IAAEC,SAAS;IAAEC;EAAS,CAAC;EAC9C,IAAI,UAAU,IAAID,SAAS,EAAE;IACzB,OAAOA,SAAS;EACpB;EACA,OAAO,CAAC,CAAC,EAAEP,YAAY,CAACS,eAAe,EAAEF,SAAS,EAAEC,QAAQ,CAAC;AACjE,CAAC;AACD,MAAMT,MAAM,GAAG,CAACW,MAAM,EAAEC,MAAM,KAAK;EAC/B,MAAMC,WAAW,GAAGN,iBAAiB,CAACI,MAAM,CAAC;EAC7C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAMG,SAAS,GAAG,CAACC,QAAQ,EAAEC,KAAK,EAAEC,OAAO,KAAK;IAC5C,MAAM;MAAEC,OAAO;MAAEb;IAAK,CAAC,GAAGO,MAAM,CAACG,QAAQ,CAAC,CAACC,KAAK,CAAC;IACjD,OAAOH,WAAW,CAACM,QAAQ,CAACvB,MAAM,CAACwB,MAAM,CAAC;MAAEF,OAAO;MAAEG,IAAI,EAAEjB,UAAU,CAACC,IAAI;IAAE,CAAC,EAAEY,OAAO,CAAC,CAAC;EAC5F,CAAC;EACD,OAAO;IACHK,IAAI,EAAER;EACV,CAAC;AACL,CAAC;AACDhB,OAAO,CAACE,MAAM,GAAGA,MAAM;AACvBF,OAAO,CAACyB,OAAO,GAAGzB,OAAO,CAACE,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}